; we leverage the default PHP/SYSLOG logging levels defined here:
; 	http://us.php.net/manual/en/function.syslog.php
; your log setting in php.ini will affect what php is able to report
; --you can include as many LOG_DEBUG->LOG_NOTICE messages as you want in your code
; 	these will be discarded in production if your settings are E_WARNING
;
;CONSTANT		EVAL 	SEVERITY	DESCRIPTION							
;LOG_EMERG		0		1			system is unusable					 
;LOG_ALERT		1		2			action must be taken immediately	
;LOG_CRIT		2  		3			critical conditions					
;LOG_ERR		3		4			error conditions					
;LOG_WARNING	4		4			warning conditions					
;LOG_NOTICE		5		4			normal, but significant, condition	
;LOG_INFO		6					informational message				
;LOG_DEBUG		7					debug-level message					
;LOG_KERN		0,
;LOG_USER		8,
;LOG_MAIL		16,
;LOG_DAEMON		24,
;LOG_AUTH		32,
;LOG_SYSLOG		40,
;LOG_LPR		48,
;LOG_NEWS		56,
;LOG_UUCP		64,
;LOG_CRON		72,
;LOG_AUTHPRIV	80,
;LOG_LOCAL0		128,
;LOG_LOCAL1		136,
;LOG_LOCAL2		144,
;LOG_LOCAL3		152,
;LOG_LOCAL4		160,
;LOG_LOCAL5		168,
;LOG_LOCAL6		176,
;LOG_LOCAL7		184,
;LOG_PID		1,
;LOG_CONS		2,
;LOG_ODELAY		4,
;LOG_NDELAY		8,
;LOG_NOWAIT		16,
;LOG_PERROR		32,

; basic ini to store all the LOG config info
; DATE & ".log" EXTENSION IS APPENDED TO FILE NAME 
; INTERNAL TO THE LOGGER CLASS
; 
; LOG LINE STARTS WITH USER ID AND TIME STAMP
; 
; 
; MUST FOLLOW THIS STRUCTURE
;-------------------------------
; FILE
;[JCORE] 					LOGGING SERIVCE NAME
;logFacility="FILE" 		LOG TO: File @ writePath. "FILE" IF UNDEFINED
;writePath="LOGS/"			"[FILE_PATH]" WRITE PATH [LOCAL/NFS/GSF], assumed to be under /var/log/....
;logName="JCORE_"			"[FILE_PREPEND]" date will be added to the file name 
;dateFormat="Y-m-d"			added to the prepend file name
;logSuffix="log"			the "." is added before the suffix
;stripWhitespace=TRUE		strip whitespace from the logline, each entry is followed by new line
;===OPTIONAL SETTINGS=== 	[logFacility="FILE"]
;buffer="FALSE/TRUE"		(MUST BE STRING) whether to buffer output (buffer written when message reaches block size or on destruct)
;bufferSize=[4096] 			int # of chars [i.e. 4096] should be the number of characters to create a string of # bytes 
;							equalling the file block size of the file system, [UTF-8 -3 chars for BOM]
;							only use these if you need to, you can try to optimize I/O by buffering 
; 							to the block size of the file system
;-------------------------------
;[UDP_LOGGER]				LOGGING SERIVCE NAME
;logFacility="UDP" 			LOG TO: Socket via UPD
;port=[10K+]				HOST PORT (1 per service)
;host="127.0.0.1"			HOST NAME/IP
;persist="FALSE/TRUE"		PERSIST THE SOCKET (MUST BE STRING)
;
;------------------------------- 
;[SYSLOG]					LOGGING SERIVCE NAME
; logFacility="SYSLOG" 		LOG TO: (OS Syslog service)
; 
;------------------------------- 
;[DATA_BASE]
;DSN="[DSN]"
;
;
LOAD_ID="JCORE_LOG"

[JCORE]
logFacility="FILE" 
writePath="/var/log/"
logName="JCORE_"
dateFormat="Y-m-d H:i:s"
logSuffix="log"
stripWhitespace=TRUE
bufferWrite=FALSE
;blockSize=[4096]
; need a option here to buffer the entire contents of the log [blockSize=0?]

[JCORE_DATA_LOG]
logFacility="FILE" 
writePath="/var/log/"
logName="JCORE_DATALOG_"
dateFormat="Y-m-d H:i:s"
logSuffix="log"
stripWhitespace=TRUE
bufferWrite=FALSE
;blockSize=[4096]

[JCORE_CACHE_LOG]
logFacility="FILE" 
writePath="/var/log/httpd/"
logName="JCORE_CACHELOG_"
dateFormat="Y-m-d H:i:s"
dateFormatFile="Y-m-d"
logSuffix="log"
stripWhitespace=TRUE
bufferWrite=FALSE
;blockSize=[4096]